#!/bin/sh

set -x
echo "watching /volume1/$WATCH_DIR_NAME ..."

#ignore partial downloads (ending with 'part')
inotifywait -m "/volume1/$WATCH_DIR_NAME" -e create -e moved_to -e modify --exclude 'part$' --format '%w%f' $INOTIFYWAIT_OPTS | stdbuf -oL uniq | while read -r FILE; do
	#skip known non-media file types
	if file --extension "$FILE" | egrep "rar|zip|txt|part"; then
		echo "skipping $FILE"
		continue
	fi
	
	# make sure to inform the user that we are waiting for things to settle down
	echo "Waiting $SETTLE_DOWN_TIME seconds for changes to settle down..."

	# file may yield inode/x-empty for new files
	sleep "$SETTLE_DOWN_TIME"

	# abort if the file has been modified while we were asleep
	if [ `find "$FILE" -type f -newermt "$SETTLE_DOWN_TIME seconds ago" -print -quit` ]; then
		echo "Modified: $FILE"
		continue
	fi

	# e.g. video.mp4: video/mp4
	if file --mime-type "$FILE" | egrep "directory|video|audio|empty|octet-stream"; then
		filebot -script fn:amc \
		"/volume1/$WATCH_DIR_NAME" \
        	--output "/volume1/${OUTPUT_DIR_NAME}" \
		--action "$AMC_ACTION" \
		--conflict "$AMC_CONFLICT" \
		--def excludeList="$AMC_EXCLUDE_LIST" \
		--def movieFormat="$AMC_MOVIE_FORMAT" \
		--def musicFormat="$AMC_MUSIC_FORMAT" \
		--def seriesFormat="$AMC_SERIES_FORMAT" \
		--def animeFormat="$AMC_ANIME_FORMAT" \
		--def music="$AMC_PROCESS_MUSIC" \
		--def artwork=n \
		--def clean=y \
		--def unsorted=y \
		--def skipExtract=$SKIP_EXTRACTION \
		--def minLengthMS=300000
		-non-strict --log-file amc.log --def excludeList=".excludes"
	else
		echo "Ignore: `file --mime-type "$FILE"`"
	fi
done
